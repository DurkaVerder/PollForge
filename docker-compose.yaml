version: '3.9'

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - pollforge-network
    depends_on:
      - grafana
      - auth-service
      - stream-line-service
      - forms-service
      - profile-service
      - question-service
      - stats-service
      - email-service
      - comments-service

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8089:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - pollforge-network


  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_KRAFT_MODE=true                                 
      - KAFKA_CFG_PROCESS_ROLES=broker,controller             
      - KAFKA_CFG_NODE_ID=1                                   
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093      
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes                          
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pollforge-network

  
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: durka
      POSTGRES_DB: pollforge-database
    ports:
      - "5432:5432" 
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 30s
    networks:
      - pollforge-network

  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8081:8080" 
    depends_on:
      postgres: 
          condition: service_healthy
      kafka: 
          condition: service_healthy
    networks:
      - pollforge-network    

  stream-line-service:
    build:
      context: ./stream_line
      dockerfile: Dockerfile
    container_name: stream-line
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8082:8080"
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  forms-service:
    build:
      context: ./forms
      dockerfile: Dockerfile
    container_name: forms
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8083:8080"
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  profile-service:
    build:
      context: ./profile
      dockerfile: Dockerfile
    container_name: profile
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8084:8080"
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  question-service:
    build:
      context: ./question
      dockerfile: Dockerfile
    container_name: question
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8085:8080"
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  stats-service:
    build:
      context: ./stats
      dockerfile: Dockerfile
    container_name: stats
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8086:8080"
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  email-service:
    build:
      context: ./email
      dockerfile: Dockerfile
    container_name: email
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - SMTP_EMAIL=hotelbooking02@mail.ru
      - SMTP_PASSWORD=hPWFLzDD5mqWMPy1G1ty
      - SMTP_HOST=smtp.mail.ru
      - SMTP_PORT=465
      - PORT=:8080
    ports:
      - "8087:8080"
    depends_on:
      kafka: 
          condition: service_healthy
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  comments-service:
    build:
      context: ./comments
      dockerfile: Dockerfile
    container_name: comments
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8080
    ports:
      - "8088:8080"
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network
      
volumes:
  postgres_data:
  grafana-storage:
  kafka-data:

networks:
  pollforge-network:
    driver: bridge
