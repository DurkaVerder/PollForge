version: '3.9'

services:


  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pollforge-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - pollforge-network
  
    

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: durka
      POSTGRES_DB: pollforge-database
    ports:
      - "5432:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
      - pollforge-network





  # admin-service:
  #   build:
  #     context: ./admin
  #     dockerfile: Dockerfile
  #   container_name: admin
  #   environment:
  #     - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
  #     - PORT=:8080
  #   depends_on:
  #     - postgres
  #   networks:
  #     - pollforge-network


  auth-service:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      # - KAFKA_BROKER=kafka:9092
      # - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8081
    depends_on:
      postgres: 
          condition: service_healthy
      kafka: 
          condition: service_healthy
    networks:
      - pollforge-network    
    

  stream-line-service:
    build:
      context: ./stream_line
      dockerfile: Dockerfile
    container_name: stream-line
    environment:
      # - KAFKA_BROKER=kafka:9092
      # - KAFKA_TOPIC=notification
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8082
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  forms-service:
    build:
      context: ./forms
      dockerfile: Dockerfile
    container_name: forms
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8083
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  profile-service:
    build:
      context: ./profile
      dockerfile: Dockerfile
    container_name: profile
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8084
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  question-service:
    build:
      context: ./question
      dockerfile: Dockerfile
    container_name: question
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8085
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  stats-service:
    build:
      context: ./stats
      dockerfile: Dockerfile
    container_name: stats
    environment:
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - PORT=:8086
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network
  


  email-service:
    build:
      context: ./email
      dockerfile: Dockerfile
    container_name: email
    environment:
      - KAFKA_BROKER="kafka:9092"
      - DB_URL=postgres://postgres:durka@postgres:5432/pollforge-database?sslmode=disable
      - SMTP_EMAIL=hotelbooking02@mail.ru
      - SMTP_PASSWORD=hPWFLzDD5mqWMPy1G1ty
      - SMTP_HOST=smtp.mail.ru
      - SMTP_PORT=465
    depends_on:
      postgres: 
          condition: service_healthy
    networks:
      - pollforge-network

  


  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend
  #   networks:
  #     - pollforge-network

volumes:
  postgres_data:

networks:
  pollforge-network:
    driver: bridge
